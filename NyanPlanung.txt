Überblick Hardware Konfiguration NyanPrinter
============================================

GPIOA:
- TIM2 Channel 1: PA0 (step-Signal)
- Button: PA1 (Interrupt-Input)
- SPI Chip Select: PA2 (Output)
- Photoreflector: PA3 (Input)
- Motor enable: PA4 (Output)
- SPI: PA5,6,7
- TIM1 Channel 1: PA8 (parallel-Clock)
- Latch: PA11 und PB15

GPIOB:
- genutzt für parallele Datenübertragungen an Drucker
- High byte des ODR-Registers wird von DMA1 Channel 2 beschrieben
- genutzte Pins: PB8 - PB15 (6x parallele Daten, 1x dir-Pin des Motors, 1x ungenutzt)
- TIM3 Channel 1: PB4 (strobe-Signal)

SPI1:
- überträgt Daten an LED-Treiber (MAX6966)
- Datenübertragung wird manuell gestartet, indem DMA1 aktiviert wird
- Konfiguration entsprechend Datenblatt des LED-Treibers

DMA1 Channel 2:
- stellt Bilddaten zur parallelen Übertragung zur Verfügung
- Übertragung wird ausgelöst von TIM1_CH1
- Richtung: Memory -> Peripheral
- Datenquelle: Bildpuffer
- Datenziel: GPIOB_ODR
- Datenbreite: byte -> half word
- Datenlänge: Länge des Bildpuffers (Anzahl Zeilen x 64)
- circular mode

DMA1 Channel 3:
- stellt LED-Daten zur Übertragung mittels SPI1 zur Verfügung
- Übertragung wird ausgelöst von SPI1_TX (Transmit buffer empty) or manually after each led frame update in main
- Richtung: Memory -> Peripheral
- Datenquelle: LED-Puffer
- Datenziel: SPI1_DR
- Datenbreite: half word -> half word
- Datenlänge 9x 16 bit (9 transmissions)
- non-circular mode

    TIM1:
    - generiert Takt für serielle Datenübertragung -> TIM1_CH1-Output an parallel_clk-Pin
    - Frequenz: 72 MHz (Systemtakt)
    - Zählperiode: 72 (generiert 1 MHz Takt)
    - Channel 1 compare: 36 (50 %)
    - PWM mode: 1 (Muster "low - high") -> Drucker übernimmt Daten bei fallender Flanke, also beim Update
    - Channel 1 auf DMA1 mappen
    - one-pulse mode (64 Wiederholungen, ergibt eine Bildzeile)
    - nach 64 Wiederholungen: Interrupt für Latch

    TIM2:s
    - generiert Schrittimpulse für den Motor -> TIM2_CH1-Output an step-Pin
    - Frequenz: 10 kHz
    - Zählperiode: entsprechend für Frequenz der aktuellen Note
    - Channel 1 compare: 50 % der Zählperiode
    - PWM mode: 2 (Muster "high - low")
    - update interrupt: aktiviere TIM1 für Datenübertragung bzw. TIM3 für strobe-Impuls
    - Plan fürs Ende: läuft im slave mode, wird kontrolliert von TIM4

    TIM3:
    - generiert strobe-Impuls -> TIM3_CH1-Output an strobe-Pin
    - gestartet in ISR von TIM2 update
    - Frequenz: 1 MHz
    - Zählperiode: 750 (Bsp. für benötigten strobe-Impuls von rund 750 us)
    - Channel 1 compare: 1 (damit Ausgang nach Update low bleibt, aber sofort mit Start des Timers high geht)
    - PWM mode: 1 (Muster "low - high")
    - one-pulse mode

TIM4:
- generiert Aktivierungssignal für TIM2
- kontrolliert damit die Tonlänge und gibt ein Interrupt, wenn der nächste Ton beginnen soll
- Tonhöhe und Länge zunächst im main loop einstellen, dann TIM4 dafür nutzen

USART1:
- asynchronous mode
- Für Debugzwecke
